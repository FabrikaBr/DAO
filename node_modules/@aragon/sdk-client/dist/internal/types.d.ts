import { BigNumber } from "@ethersproject/bignumber";
import { TransferType } from "../types";
export declare type SubgraphPluginListItem = {
    appliedPreparation: {
        pluginAddress: string;
    };
    appliedPluginRepo: {
        subdomain: string;
    };
    appliedVersion: {
        build: number;
        release: {
            release: number;
        };
    };
};
declare type SubgraphDaoBase = {
    id: string;
    subdomain: string;
    metadata: string;
    plugins: SubgraphPluginListItem[];
};
export declare type SubgraphDao = SubgraphDaoBase & {
    createdAt: string;
};
export declare type SubgraphDaoListItem = SubgraphDaoBase;
export declare type SubgraphBalance = {
    __typename: string;
    token: {
        id: string;
        name: string;
        symbol: string;
        decimals: number;
    };
    balance: string;
    lastUpdated: string;
};
export declare enum SubgraphTransferType {
    DEPOSIT = "Deposit",
    WITHDRAW = "Withdraw"
}
export declare type SubgraphTransferListItem = {
    from: string;
    to: string;
    type: SubgraphTransferType;
    createdAt: string;
    txHash: string;
    proposal: {
        id: string | null;
    };
    amount: string;
    token: SubgraphToken;
    __typename: string;
};
export declare type SubgraphToken = {
    id: string;
    name: string;
    symbol: string;
    decimals: number;
};
export declare const SubgraphTransferTypeMap: Map<TransferType, SubgraphTransferType>;
export declare type ContractPermissionParams = [string, string, string];
export declare type ContractPermissionWithConditionParams = [string, string, string, string];
export declare type ContractWithdrawParams = [string, string, BigNumber, string];
export declare type SubgraphPluginRepoReleaseListItem = {
    release: number;
    metadata: string;
    builds: {
        build: number;
    }[];
};
export declare type SubgraphPluginRepoRelease = SubgraphPluginRepoReleaseListItem & {
    builds: {
        build: number;
        metadata: string;
    }[];
};
export declare type SubgraphPluginRepoListItem = {
    id: string;
    subdomain: string;
    releases: SubgraphPluginRepoReleaseListItem[];
};
export declare type SubgraphPluginRepo = SubgraphPluginRepoListItem & {
    releases: SubgraphPluginRepoRelease[];
};
export declare type SubgraphPluginVersion = {
    release: {
        release: number;
    };
    metadata: string;
    build: number;
};
export declare type SubgraphPluginPreparation = {
    helpers: string[];
    pluginRepo: {
        id: string;
    };
};
export declare type SubgraphPluginInstallation = {
    appliedVersion: SubgraphPluginVersion;
    appliedPreparation: SubgraphPluginPreparation;
};
export {};
