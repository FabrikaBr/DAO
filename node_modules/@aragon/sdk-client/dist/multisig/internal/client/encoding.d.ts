import { ClientCore, DaoAction, PluginInstallItem } from "../../../client-common";
import { AddAddressesParams, MultisigPluginInstallParams, RemoveAddressesParams, UpdateMultisigVotingSettingsParams } from "../../types";
import { Networkish } from "@ethersproject/providers";
import { IMultisigClientEncoding } from "../../interfaces";
/**
 * Encoding module for the SDK Multisig Client
 */
export declare class MultisigClientEncoding extends ClientCore implements IMultisigClientEncoding {
    /**
     * Computes the parameters to be given when creating the DAO,
     * so that the plugin is configured
     *
     * @param {MultisigPluginInstallParams} params
     * @param {Networkish} network
     *
     * @return {*}  {PluginInstallItem}
     * @memberof MultisigClientEncoding
     */
    static getPluginInstallItem(params: MultisigPluginInstallParams, network: Networkish): PluginInstallItem;
    /**
     * Computes the parameters to be given when creating a proposal that updates the governance configuration
     *
     * @param {AddAddressesParams} params
     * @return {*}  {DaoAction[]}
     * @memberof MultisigClientEncoding
     */
    addAddressesAction(params: AddAddressesParams): DaoAction;
    /**
     * Computes the parameters to be given when creating a proposal that adds addresses to address list
     *
     * @param {RemoveAddressesParams} params
     * @return {*}  {DaoAction[]}
     * @memberof MultisigClientEncoding
     */
    removeAddressesAction(params: RemoveAddressesParams): DaoAction;
    /**
     * Computes the parameters to be given when creating a proposal updates multisig settings
     *
     * @param {UpdateMultisigVotingSettingsParams} params
     * @return {*}  {DaoAction}
     * @memberof MultisigClientEncoding
     */
    updateMultisigVotingSettings(params: UpdateMultisigVotingSettingsParams): DaoAction;
}
