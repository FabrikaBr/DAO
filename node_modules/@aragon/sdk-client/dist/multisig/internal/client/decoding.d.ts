import { ClientCore, InterfaceParams } from "../../../client-common";
import { MultisigVotingSettings } from "../../types";
import { IMultisigClientDecoding } from "../../interfaces";
/**
 * Decoding module for the SDK AddressList Client
 */
export declare class MultisigClientDecoding extends ClientCore implements IMultisigClientDecoding {
    /**
     * Decodes a list of addresses from an encoded add members action
     *
     * @param {Uint8Array} data
     * @return {*}  {string[]}
     * @memberof MultisigClientDecoding
     */
    addAddressesAction(data: Uint8Array): string[];
    /**
     * Decodes a list of addresses from an encoded remove members action
     *
     * @param {Uint8Array} data
     * @return {*}  {string[]}
     * @memberof MultisigClientDecoding
     */
    removeAddressesAction(data: Uint8Array): string[];
    /**
     * Decodes a list of min approvals from an encoded update min approval action
     *
     * @param {Uint8Array} data
     * @return {*}  {MultisigVotingSettings}
     * @memberof MultisigClientDecoding
     */
    updateMultisigVotingSettings(data: Uint8Array): MultisigVotingSettings;
    /**
     * Returns the decoded function info given the encoded data of an action
     *
     * @param {Uint8Array} data
     * @return {*}  {(InterfaceParams | null)}
     * @memberof MultisigClientDecoding
     */
    findInterface(data: Uint8Array): InterfaceParams | null;
}
