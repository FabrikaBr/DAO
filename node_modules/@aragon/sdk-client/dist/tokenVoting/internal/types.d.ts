import { BigNumber } from "@ethersproject/bignumber";
import { ContractVotingSettings, SubgraphAction, SubgraphProposalBase, SubgraphVoterListItemBase, VotingMode } from "../../client-common";
export declare type ContractMintTokenParams = [string, BigNumber];
export declare type ContractTokenVotingInitParams = [ContractVotingSettings, [string, // address
string, // name
string], [string[], // receivers,
BigNumber[]]];
export declare type SubgraphTokenVotingVoterListItem = SubgraphVoterListItemBase & {
    votingPower: string;
};
export declare type SubgraphTokenVotingProposalListItem = SubgraphProposalBase & {
    plugin: {
        token: SubgraphErc20Token | SubgraphErc721Token;
    };
    voters: SubgraphTokenVotingVoterListItem[];
    supportThreshold: string;
    minVotingPower: bigint;
    totalVotingPower: string;
    votingMode: VotingMode;
    earlyExecutable: boolean;
};
declare type SubgraphBaseToken = {
    symbol: string;
    name: string;
    id: string;
};
export declare enum SubgraphTokenType {
    ERC20 = "ERC20Token",
    ERC721 = "ERC721Token"
}
export declare enum SubgraphContractType {
    ERC20 = "ERC20Contract",
    ERC721 = "ERC721Contract"
}
export declare type SubgraphErc20Token = SubgraphBaseToken & {
    __typename: SubgraphContractType.ERC20;
    decimals: number;
};
export declare type SubgraphErc721Token = SubgraphBaseToken & {
    __typename: SubgraphContractType.ERC721;
};
export declare type SubgraphTokenVotingProposal = SubgraphTokenVotingProposalListItem & {
    createdAt: string;
    actions: SubgraphAction[];
    creationBlockNumber: string;
    executionDate: string;
    executionTxHash: string;
    executionBlockNumber: string;
};
export declare type SubgraphTokenVotingMember = {
    address: string;
    balance: string;
    votingPower: string;
    delegatee: {
        address: string;
    };
    delegators: {
        address: string;
        balance: string;
    }[];
};
export {};
