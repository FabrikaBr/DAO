import { IAddresslistVotingClient, IAddresslistVotingClientDecoding, IAddresslistVotingClientEncoding, IAddresslistVotingClientEstimation, IAddresslistVotingClientMethods } from "./interfaces";
import { ClientCore, ContextPlugin, PluginInstallItem } from "../client-common";
import { Networkish } from "@ethersproject/providers";
import { AddresslistVotingPluginInstall } from "./types";
/**
 * Provider a generic client with high level methods to manage and interact an Address List Voting plugin installed in a DAO
 */
export declare class AddresslistVotingClient extends ClientCore implements IAddresslistVotingClient {
    methods: IAddresslistVotingClientMethods;
    encoding: IAddresslistVotingClientEncoding;
    decoding: IAddresslistVotingClientDecoding;
    estimation: IAddresslistVotingClientEstimation;
    constructor(context: ContextPlugin);
    static encoding: {
        /**
         * Computes the parameters to be given when creating the DAO,
         * so that the plugin is configured
         *
         * @param {AddresslistVotingPluginInstall} params
         * @param {Networkish} [network="mainnet"]
         * @return {*}  {PluginInstallItem}
         * @memberof AddresslistVotingClient
         */
        getPluginInstallItem: (params: AddresslistVotingPluginInstall, network?: Networkish) => PluginInstallItem;
    };
}
