import { ClientCore, DaoAction, PluginInstallItem, VotingSettings } from "../../../client-common";
import { IAddresslistVotingClientEncoding } from "../../interfaces";
import { Networkish } from "@ethersproject/providers";
import { AddresslistVotingPluginInstall } from "../../types";
/**
 * Encoding module for the SDK AddressList Client
 */
export declare class AddresslistVotingClientEncoding extends ClientCore implements IAddresslistVotingClientEncoding {
    /**
     * Computes the parameters to be given when creating the DAO,
     * so that the plugin is configured
     *
     * @param {AddresslistVotingPluginInstall} params
     * @param {Networkish} network
     * @return {*}  {PluginInstallItem}
     * @memberof AddresslistVotingClientEncoding
     */
    static getPluginInstallItem(params: AddresslistVotingPluginInstall, network: Networkish): PluginInstallItem;
    /**
     * Computes the parameters to be given when creating a proposal that updates the governance configuration
     *
     * @param {string} pluginAddress
     * @param {VotingSettings} params
     * @return {*}  {DaoAction}
     * @memberof AddresslistVotingClientEncoding
     */
    updatePluginSettingsAction(pluginAddress: string, params: VotingSettings): DaoAction;
    /**
     * Computes the parameters to be given when creating a proposal that adds addresses to address list
     *
     * @param {string} pluginAddress
     * @param {string[]} members
     * @return {*}  {DaoAction}
     * @memberof AddresslistVotingClientEncoding
     */
    addMembersAction(pluginAddress: string, members: string[]): DaoAction;
    /**
     * Computes the parameters to be given when creating a proposal that removes addresses from the address list
     *
     * @param {string} pluginAddress
     * @param {string[]} members
     * @return {*}  {DaoAction}
     * @memberof AddresslistVotingClientEncoding
     */
    removeMembersAction(pluginAddress: string, members: string[]): DaoAction;
}
