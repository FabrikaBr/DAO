declare class SdkError extends Error {
    cause?: Error | string;
    constructor(message: string, cause?: any);
}
export declare class TimeoutError extends SdkError {
    constructor(message?: string, cause?: any);
}
export declare class UnsupportedProtocolError extends SdkError {
    constructor(protocol: string, cause?: any);
}
export declare class GraphQLError extends SdkError {
    constructor(model: string, cause?: any);
}
export declare class IpfsError extends SdkError {
    constructor(cause?: any);
}
export declare class InvalidAddressOrEnsError extends SdkError {
    constructor(cause?: any);
}
export declare class InvalidAddressError extends SdkError {
    constructor(cause?: any);
}
export declare class InvalidCidError extends SdkError {
    constructor(cause?: any);
}
export declare class InvalidProposalIdError extends SdkError {
    constructor(cause?: any);
}
export declare class NoProviderError extends SdkError {
    constructor(cause?: any);
}
export declare class NoSignerError extends SdkError {
    constructor(cause?: any);
}
export declare class UnexpectedActionError extends SdkError {
    constructor(cause?: any);
}
export declare class NoTokenAddress extends SdkError {
    constructor(cause?: any);
}
export declare class NoDaoFactory extends SdkError {
    constructor(cause?: any);
}
export declare class NoPluginRepoRegistry extends SdkError {
    constructor(cause?: any);
}
export declare class NoDaoRegistry extends SdkError {
    constructor(cause?: any);
}
export declare class IpfsPinError extends SdkError {
    constructor(cause?: any);
}
export declare class ProposalCreationError extends SdkError {
    constructor(cause?: any);
}
export declare class MissingExecPermissionError extends SdkError {
    constructor(cause?: any);
}
export declare class IpfsFetchError extends SdkError {
    constructor(cause?: any);
}
export declare class InvalidVotingModeError extends SdkError {
    constructor(cause?: any);
}
export declare class UpdateAllowanceError extends SdkError {
    constructor(cause?: any);
}
export declare class InvalidPrecisionError extends SdkError {
    constructor(cause?: any);
}
export declare class FailedDepositError extends SdkError {
    constructor(cause?: any);
}
export declare class AmountMismatchError extends SdkError {
    constructor(expected: bigint, received: bigint, cause?: any);
}
export declare class UnsupportedNetworkError extends SdkError {
    constructor(network: string, cause?: any);
}
export declare class ClientNotInitializedError extends SdkError {
    constructor(client: string, cause?: any);
}
export declare class NoNodesAvailableError extends SdkError {
    constructor(name: string, cause?: any);
}
export declare class PluginInstallationPreparationError extends SdkError {
    constructor(cause?: any);
}
export declare class DataDecodingError extends SdkError {
    constructor(message: string, cause?: any);
}
export declare class InvalidContractAddressError extends SdkError {
    constructor(cause?: any);
}
export declare class InvalidContractAbiError extends SdkError {
    constructor(cause?: any);
}
export declare class CannotEstimateGasError extends SdkError {
    constructor(cause?: any);
}
export declare class InstallationNotFoundError extends SdkError {
    constructor(cause?: any);
}
export declare class PluginUninstallationPreparationError extends SdkError {
    constructor(cause?: any);
}
export declare class MissingMetadataError extends SdkError {
    constructor(cause?: any);
}
export declare class InvalidPrepareUninstallationAbiError extends SdkError {
    constructor(cause?: Error);
}
export declare class InvalidEnsError extends SdkError {
    constructor(cause?: any);
}
export declare class DepositNativeTokenError extends SdkError {
    constructor(cause?: any);
}
export {};
